import { KeyOf, Model, ReadonlyModel } from './model';
declare type Dependency<T extends object = {}> = [model: Model<T>, dependencies: Array<KeyOf<T>>] | [model: ReadonlyModel<T>, dependencies: Array<KeyOf<T>>];
export declare function computed<R, D0 extends object, D1 extends object, D2 extends object, D3 extends object, D4 extends object, D5 extends object>(getter: () => R, dep0?: Dependency<D0>, dep1?: Dependency<D1>, dep2?: Dependency<D2>, dep3?: Dependency<D3>, dep4?: Dependency<D4>, dep5?: Dependency<D5>): ReadonlyModel<{
    value: R;
}>;
export {};
//# sourceMappingURL=computed.d.ts.map