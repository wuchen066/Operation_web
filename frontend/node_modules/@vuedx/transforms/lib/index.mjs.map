{"version":3,"file":"index.mjs","sources":["../src/createProgram.ts","../src/findIdentifiers.ts","../src/tsTransformScript.ts","../src/tsTransformScriptSetup.ts"],"sourcesContent":["import TypeScript from 'typescript/lib/tsserverlibrary'\nimport { TransformScriptOptions } from './TransformScriptOptions'\n\nexport function createProgram(\n  ts: typeof TypeScript,\n  source: string,\n  fileName: string = 'input.ts',\n  lang: TransformScriptOptions['lang'] = 'ts',\n  previous?: TypeScript.Program,\n): TypeScript.Program {\n  const compilerHost: TypeScript.CompilerHost = {\n    fileExists: () => true,\n    getCanonicalFileName: (filename) => filename,\n    getCurrentDirectory: () => '',\n    getDefaultLibFileName: () => 'lib.d.ts',\n    getNewLine: () => '\\n',\n    getSourceFile: (id) => {\n      if (id !== fileName) return\n\n      return ts.createSourceFile(\n        id,\n        source,\n        ts.ScriptTarget.Latest,\n        true,\n        getScriptKind(lang),\n      )\n    },\n    readFile: () => undefined,\n    useCaseSensitiveFileNames: () => true,\n    writeFile: () => undefined,\n  }\n\n  const program = ts.createProgram(\n    [fileName],\n    {\n      noResolve: true,\n      target: ts.ScriptTarget.Latest,\n      jsx: lang.endsWith('x') ? ts.JsxEmit.Preserve : undefined,\n    },\n    compilerHost,\n    previous,\n  )\n\n  return program\n\n  function getScriptKind(\n    lang: TransformScriptOptions['lang'],\n  ): TypeScript.ScriptKind {\n    switch (lang) {\n      case 'js':\n        return ts.ScriptKind.JS\n      case 'ts':\n        return ts.ScriptKind.TS\n      case 'tsx':\n        return ts.ScriptKind.TSX\n      case 'jsx':\n        return ts.ScriptKind.JSX\n      default:\n        throw new Error(`Unknown lang`)\n    }\n  }\n}\n","import { first } from '@vuedx/shared'\nimport TypeScript from 'typescript/lib/tsserverlibrary'\n\nexport interface KnownIdentifier {\n  name: string\n  kind:\n    | 'variable'\n    | 'function'\n    | 'class'\n    | 'enum'\n    | 'ref'\n    | 'maybeRef'\n    | 'external'\n    | 'externalRef'\n    | 'externalMaybeRef'\n}\n\nexport function findIdentifiers(\n  ts: typeof TypeScript,\n  program: TypeScript.Program,\n  sourceFile: TypeScript.SourceFile,\n): KnownIdentifier[] {\n  const checker = program.getTypeChecker()\n  const identifiers: KnownIdentifier[] = []\n\n  checker\n    .getSymbolsInScope(\n      sourceFile,\n      (ts.SymbolFlags.FunctionScopedVariable |\n        ts.SymbolFlags.BlockScopedVariable |\n        ts.SymbolFlags.Function |\n        ts.SymbolFlags.Class |\n        ts.SymbolFlags.ConstEnum |\n        ts.SymbolFlags.RegularEnum |\n        ts.SymbolFlags.Alias) &\n        ~(\n          ts.SymbolFlags.Interface |\n          ts.SymbolFlags.TypeLiteral |\n          ts.SymbolFlags.TypeParameter |\n          ts.SymbolFlags.TypeAlias\n        ),\n    )\n    .forEach((sym) => {\n      const name = sym.getName()\n      const flags = sym.getFlags()\n      const kind: KnownIdentifier['kind'] =\n        (flags & ts.SymbolFlags.Function) !== 0\n          ? 'function'\n          : (flags & ts.SymbolFlags.Class) !== 0\n          ? 'class'\n          : (flags & ts.SymbolFlags.ConstEnum) !== 0 ||\n            (flags & ts.SymbolFlags.RegularEnum) !== 0\n          ? 'enum'\n          : (flags & ts.SymbolFlags.Alias) !== 0\n          ? 'externalMaybeRef'\n          : 'maybeRef'\n\n      if (\n        kind === 'maybeRef' &&\n        sym.valueDeclaration != null &&\n        ts.isVariableDeclaration(sym.valueDeclaration) &&\n        sym.valueDeclaration.initializer != null\n      ) {\n        const { initializer, type } = sym.valueDeclaration\n\n        if (type == null) {\n          if (\n            !(\n              ts.isCallExpression(initializer) || ts.isIdentifier(initializer)\n            ) ||\n            (ts.isCallExpression(initializer) &&\n              ts.isIdentifier(initializer.expression) &&\n              ['defineProps', 'defineEmits'].includes(\n                initializer.expression.getText(),\n              ))\n          ) {\n            return identifiers.push({ name, kind: 'variable' })\n          }\n        }\n      }\n\n      if (\n        kind === 'externalMaybeRef' &&\n        sym.declarations != null &&\n        sym.declarations.length > 0\n      ) {\n        const declaration = first(sym.declarations)\n        if (ts.isImportClause(declaration)) {\n          if (declaration.isTypeOnly) return\n          if (\n            ts.isStringLiteral(declaration.parent.moduleSpecifier) &&\n            declaration.parent.moduleSpecifier.text.endsWith('.vue')\n          ) {\n            return identifiers.push({ name, kind: 'external' })\n          }\n        } else if (ts.isNamespaceImport(declaration)) {\n          if (declaration.parent.isTypeOnly) return\n        } else if (ts.isImportSpecifier(declaration)) {\n          if (declaration.isTypeOnly) return\n          if (declaration.parent.parent.isTypeOnly) return\n        }\n      }\n\n      return identifiers.push({ name, kind })\n    })\n\n  return identifiers\n}\n","import {\n  DecodedSourceMap,\n  getComponentName,\n  invariant,\n  SourceTransformer,\n} from '@vuedx/shared'\nimport type TypeScript from 'typescript/lib/tsserverlibrary'\nimport { createProgram } from './createProgram'\nimport { findIdentifiers, KnownIdentifier } from './findIdentifiers'\nimport { TransformScriptOptions } from './TransformScriptOptions'\nexport interface TransformScriptResult {\n  code: string\n  map: DecodedSourceMap\n  identifiers: KnownIdentifier[]\n  componentIdentifier: string\n  name: string\n  inheritAttrs: boolean\n}\n\nexport function transformScript(\n  source: string,\n  options: TransformScriptOptions,\n): TransformScriptResult {\n  const key = `${options.fileName}:script:program`\n  const ts = options.lib\n  const inputFile = `input.${options.lang}`\n  const program = createProgram(\n    ts,\n    source,\n    inputFile,\n    options.lang,\n    options.cache?.get(key) as TypeScript.Program,\n  )\n  options.cache?.set(key, program)\n  const sourceFile = program.getSourceFile(inputFile)\n  invariant(sourceFile != null, 'Source file not found.')\n\n  let defaultExport: TypeScript.ExportAssignment | undefined\n  let inheritAttrs: boolean = true\n  let name: string = getComponentName(options.fileName)\n\n  const vars = {\n    defineComponent: `${options.internalIdentifierPrefix}defineComponent`,\n    Component: `${options.internalIdentifierPrefix}_Script_Component`,\n  }\n\n  const code = new SourceTransformer(inputFile, source)\n\n  findNodes(sourceFile)\n\n  const identifiers = findIdentifiers(ts, program, sourceFile)\n\n  if (defaultExport != null) {\n    const needsDefineComponent = ts.isObjectLiteralExpression(\n      defaultExport.expression,\n    )\n\n    code.clone(0, defaultExport.getFullStart())\n    code.nextLine()\n    code.append(`const ${vars.Component} = `)\n    if (needsDefineComponent) {\n      code.append(`${vars.defineComponent}(`)\n    }\n    code.clone(\n      defaultExport.expression.getFullStart(),\n      defaultExport.expression.getEnd(),\n    )\n    if (needsDefineComponent) {\n      code.append(');')\n      code.nextLine()\n    }\n    code.clone(defaultExport.expression.getEnd(), source.length)\n  } else {\n    code.nextLine()\n    code.clone(0, source.length)\n    code.nextLine()\n    code.append(`const ${vars.Component} = ${vars.defineComponent}({});`)\n  }\n\n  code.nextLine()\n\n  const result = code.end()\n\n  return {\n    code: result.code,\n    map: result.map,\n    identifiers,\n    componentIdentifier: vars.Component,\n    name,\n    inheritAttrs,\n  }\n\n  function findNodes(sourceFile: TypeScript.SourceFile): void {\n    sourceFile.statements.forEach((statement) => {\n      if (ts.isExportAssignment(statement)) {\n        defaultExport = statement\n      }\n\n      if (ts.canHaveModifiers(statement)) {\n        const modifiers = ts.getModifiers(statement)\n        if (\n          modifiers?.some(\n            (modifier) => modifier.kind === ts.SyntaxKind.ExportKeyword,\n          ) === true\n        ) {\n          if (ts.isVariableStatement(statement)) {\n            statement.declarationList.declarations.forEach((declaration) => {\n              if (ts.isIdentifier(declaration.name)) {\n                if (\n                  declaration.name.text === 'name' &&\n                  declaration.initializer != null &&\n                  ts.isStringLiteral(declaration.initializer)\n                ) {\n                  name = declaration.initializer.getText().slice(1, -1)\n                } else if (\n                  declaration.name.text === 'inheritAttrs' &&\n                  declaration.initializer != null\n                ) {\n                  inheritAttrs =\n                    declaration.initializer.kind === ts.SyntaxKind.TrueKeyword\n                }\n              }\n            })\n          }\n        }\n      }\n    })\n  }\n}\n","import {\n  DecodedSourceMap,\n  first,\n  invariant,\n  SourceTransformer,\n} from '@vuedx/shared'\nimport type TypeScript from 'typescript/lib/tsserverlibrary'\nimport { createProgram } from './createProgram'\nimport { findIdentifiers, KnownIdentifier } from './findIdentifiers'\nimport { TransformScriptOptions } from './TransformScriptOptions'\nexport interface TransformScriptSetupResult {\n  code: string\n  map: DecodedSourceMap\n  identifiers: KnownIdentifier[]\n  scopeIdentifier: string\n  privateComponentIdentifier: string\n  publicComponentIdentifier: string\n  exports: Record<string, string>\n}\n\nexport interface TransformScriptSetupOptions extends TransformScriptOptions {\n  generic?: string\n  attrsIdentifier: string\n  slotsIdentifier: string\n}\n\nexport function transformScriptSetup(\n  source: string,\n  options: TransformScriptSetupOptions,\n): TransformScriptSetupResult {\n  const key = `${options.fileName}:scriptSetup:program`\n  const ts = options.lib\n  const inputFile = `input.${options.lang}`\n  const program = createProgram(\n    ts,\n    source,\n    inputFile,\n    options.lang,\n    options.cache?.get(key) as TypeScript.Program,\n  )\n  options.cache?.set(key, program)\n  const sourceFile = program.getSourceFile(inputFile)\n  invariant(sourceFile != null, 'Source file not found.')\n\n  let firstStatement: TypeScript.Statement | undefined\n  let internalPropsIdentifier: TypeScript.Identifier | undefined\n  let internalPropsInitializer: TypeScript.Expression | undefined\n  let propsIdentifier: TypeScript.Identifier | undefined\n  let propsType: TypeScript.TypeNode | undefined\n  let propsOptions: TypeScript.Node | undefined\n  let emitsType: TypeScript.Node | undefined\n  let emitsOptions: TypeScript.Node | undefined\n  let exposeOptions: TypeScript.Node | undefined\n  const exportedNodes: Array<\n    | TypeScript.ExportDeclaration\n    | TypeScript.TypeAliasDeclaration\n    | TypeScript.InterfaceDeclaration\n    | TypeScript.EnumDeclaration\n  > = []\n  const exportedNames: Record<string, string> = {}\n  const _ = options.internalIdentifierPrefix\n  const vars = {\n    internalProps: `${_}ScriptSetup_internalProps`,\n    internalComponent: `${_}ScriptSetup_ComponentPrivate`,\n    publicComponent: `${_}ScriptSetup_Component`,\n    scope: `${_}ScriptSetup_scope`,\n    emits: `${_}ScriptSetup_emits`,\n    props: `${_}ScriptSetup_props`,\n    expose: `${_}ScriptSetup_expose`,\n  }\n  const generic = options.generic != null ? `<${options.generic}>` : ''\n  const code = new SourceTransformer(inputFile, source)\n\n  findNodes(sourceFile)\n\n  const identifiers = findIdentifiers(ts, program, sourceFile)\n\n  const offset =\n    firstStatement == null ? source.length : firstStatement.getFullStart()\n\n  if (exportedNodes.length > 0) {\n    genExportedNodes(0, offset)\n  } else {\n    code.clone(0, offset)\n  }\n  const { line } = code.sourceLineColumnMapper.positionAt(offset)\n\n  // wrap setup code in a function\n  code.append(`\\n`, { mappings: [[[0, 0, line + 1, 0]]] })\n\n  code.append(`function ${vars.scope}${generic}() {`, {\n    mappings: [[[0, 0, line + 1, 0]]],\n  })\n\n  if (exportedNodes.length > 0) {\n    genExportedNodes(offset, source.length)\n  } else {\n    code.clone(offset, source.length)\n  }\n\n  code.nextLine()\n\n  if (exportedNodes.length > 0) {\n    for (const node of exportedNodes) {\n      if (ts.isExportDeclaration(node)) {\n        if (node.exportClause != null && ts.isNamedExports(node.exportClause)) {\n          for (const specifier of node.exportClause.elements) {\n            const name = (specifier.propertyName ?? specifier.name).getText()\n            const internalName = `${options.internalIdentifierPrefix}_export_${name}`\n            exportedNames[name] = internalName\n            // TODO: check if typeof is required or not.\n            code.append(\n              `const ${internalName} = null as unknown as typeof ${specifier.name.getText()};`,\n            )\n            code.nextLine()\n          }\n        }\n      } else {\n        const name = node.name.getText()\n        const internalName = `${options.internalIdentifierPrefix}_export_${name}`\n        exportedNames[name] = internalName\n        code.append(`const ${internalName} = null as unknown as ${name};`)\n        code.nextLine()\n      }\n    }\n  }\n\n  // define private props (withDefaults)\n  if (internalPropsIdentifier == null && internalPropsInitializer != null) {\n    code.clone(offset, internalPropsInitializer.getStart())\n    code.append(`const ${vars.internalProps} = `)\n    code.clone(\n      internalPropsInitializer.getStart(),\n      internalPropsInitializer.getEnd(),\n    )\n    code.append(';\\n')\n  } else if (\n    internalPropsIdentifier == null &&\n    internalPropsInitializer == null\n  ) {\n    code.append(`const ${vars.internalProps} = {};\\n`)\n  }\n  code.append(\n    `const ${vars.internalComponent} = ${_}defineComponent((_: typeof ${\n      internalPropsIdentifier?.getText() ?? vars.internalProps\n    })=> {});\\n`,\n  )\n\n  // define expose\n  let expose = ''\n  if (exposeOptions != null) {\n    code.append(`const ${vars.expose} = (`)\n    code.clone(exposeOptions.getStart(), exposeOptions.getEnd())\n    code.append(`);\\n`)\n    code.append(\n      `const ${vars.expose}_API = null as unknown as new () => typeof ${vars.expose};\\n`,\n    )\n    expose = ` extends ${vars.expose}_API`\n  }\n\n  // define props\n  if (propsIdentifier != null) {\n    code.append(`const ${vars.props} = ${propsIdentifier.text};\\n`)\n  } else if (propsType != null) {\n    code.append(`const ${vars.props} = defineProps<`)\n    code.clone(propsType.getStart(), propsType.getEnd())\n    code.append(`>();\\n`)\n  } else if (propsOptions != null) {\n    code.append(`const ${vars.props} = defineProps(`)\n    code.clone(propsOptions.getStart(), propsOptions.getEnd())\n    code.append(`);\\n`)\n  } else {\n    code.append(`const ${vars.props} = defineProps({});\\n`)\n  }\n\n  // define emits\n  if (emitsType != null) {\n    code.append(\n      `const ${vars.emits} = ({} as unknown as ${options.typeIdentifier}.internal.EmitTypeToEmits<`,\n    )\n    code.clone(emitsType.getStart(), emitsType.getEnd())\n    code.append(`>);\\n`)\n  } else if (emitsOptions != null) {\n    code.append(`const ${vars.emits} = (`)\n    code.clone(emitsOptions.getStart(), emitsOptions.getEnd())\n    code.append(`);\\n`)\n  } else {\n    code.append(`const ${vars.emits} = ({});\\n`)\n  }\n\n  // define public component\n  code.append(`class ${vars.publicComponent}${generic}${expose} {\\n`)\n  // define $props using mergeAttrs\n  code.append(\n    `$props = null as unknown as ${options.typeIdentifier}.internal.MergeAttrs<`,\n  )\n  // <props>\n  if (propsType != null) {\n    code.clone(propsType.getStart(), propsType.getEnd())\n  } else {\n    code.append(`typeof ${vars.props}`)\n  }\n  // <emits>\n  code.append(` & ${options.typeIdentifier}.internal.EmitsToProps<`)\n  if (emitsType != null) {\n    code.append(`${options.typeIdentifier}.internal.EmitTypeToEmits<`)\n    code.clone(emitsType.getStart(), emitsType.getEnd())\n    code.append(`>`)\n  } else {\n    code.append(`typeof ${vars.emits}`)\n  }\n  code.append(`>`)\n  // <attrs>\n  code.append(`, typeof ${options.attrsIdentifier}>;\\n`)\n  code.append(\n    `$slots = null as unknown as ${options.typeIdentifier}.internal.Slots<ReturnType<typeof ${options.slotsIdentifier}>>;\\n`,\n  )\n  code.append('}\\n')\n\n  code.append(`\\n`)\n  const result = code.end()\n\n  return {\n    code: result.code,\n    map: result.map,\n    identifiers,\n    privateComponentIdentifier: vars.internalComponent,\n    publicComponentIdentifier: vars.publicComponent,\n    scopeIdentifier: vars.scope,\n    exports: exportedNames,\n  }\n\n  function genExportedNodes(start: number, end: number): void {\n    let cursor = start\n    for (const node of exportedNodes) {\n      const s = node.getStart()\n      const e = node.getEnd()\n      if (s > cursor && s < end) {\n        code.clone(cursor, s)\n        if (!ts.isExportDeclaration(node)) {\n          const modifier = getExportModifier(node)\n          if (modifier != null) {\n            code.clone(modifier.getEnd(), node.getEnd())\n          }\n        }\n        cursor = e\n      }\n    }\n\n    code.clone(cursor, end)\n  }\n\n  function getExportModifier(\n    node: TypeScript.Node,\n  ): TypeScript.ExportKeyword | null {\n    if (!ts.canHaveModifiers(node)) return null\n    const modifier = node.modifiers?.find(\n      (modifier): modifier is ts.ExportKeyword =>\n        modifier.kind === ts.SyntaxKind.ExportKeyword,\n    )\n    if (modifier == null) return null\n    return modifier as TypeScript.ExportKeyword\n  }\n\n  function findNodes(sourceFile: TypeScript.SourceFile): void {\n    sourceFile.statements.forEach((statement) => {\n      if (!ts.isImportDeclaration(statement)) {\n        if (firstStatement == null) {\n          firstStatement = statement\n        }\n      }\n\n      if (ts.isVariableStatement(statement)) {\n        statement.declarationList.declarations.forEach((declaration) => {\n          if (declaration.initializer != null) {\n            if (isFnCall(declaration.initializer, 'defineProps')) {\n              if (ts.isIdentifier(declaration.name)) {\n                internalPropsIdentifier = declaration.name\n                propsIdentifier = declaration.name\n              } else {\n                internalPropsInitializer = declaration.initializer\n              }\n              processProps(declaration.initializer)\n            } else if (isFnCall(declaration.initializer, 'withDefaults')) {\n              if (ts.isIdentifier(declaration.name)) {\n                internalPropsIdentifier = declaration.name\n              } else {\n                internalPropsInitializer = declaration.initializer\n              }\n\n              const definePropsExp = declaration.initializer.arguments[0]\n              if (definePropsExp != null) {\n                if (isFnCall(definePropsExp, 'defineProps')) {\n                  processProps(definePropsExp)\n                }\n              }\n            } else if (isFnCall(declaration.initializer, 'defineEmits')) {\n              processEmits(declaration.initializer)\n            } else if (isFnCall(declaration.initializer, 'defineExpose')) {\n              processExpose(declaration.initializer)\n            }\n          }\n        })\n      } else if (ts.isExpressionStatement(statement)) {\n        if (isFnCall(statement.expression, 'defineProps')) {\n          internalPropsInitializer = statement.expression\n          processProps(statement.expression)\n        } else if (isFnCall(statement.expression, 'withDefaults')) {\n          internalPropsInitializer = statement.expression\n          const definePropsExp = statement.expression.arguments[0]\n          if (definePropsExp != null) {\n            if (isFnCall(definePropsExp, 'defineProps')) {\n              processProps(definePropsExp)\n            }\n          }\n        } else if (isFnCall(statement.expression, 'defineEmits')) {\n          processEmits(statement.expression)\n        } else if (isFnCall(statement.expression, 'defineExpose')) {\n          processExpose(statement.expression)\n        }\n      } else if (ts.isExportDeclaration(statement)) {\n        if (statement.isTypeOnly) exportedNodes.push(statement)\n        // TODO: support `export { type foo }`\n      } else if (\n        ts.isTypeAliasDeclaration(statement) ||\n        ts.isInterfaceDeclaration(statement) ||\n        ts.isEnumDeclaration(statement)\n      ) {\n        const modifier = getExportModifier(statement)\n        if (modifier != null) {\n          exportedNodes.push(statement)\n        }\n      }\n    })\n\n    function isFnCall(\n      node: TypeScript.Node,\n      name: string,\n    ): node is TypeScript.CallExpression {\n      return (\n        ts.isCallExpression(node) &&\n        ts.isIdentifier(node.expression) &&\n        node.expression.escapedText === name\n      )\n    }\n\n    function processProps(node: TypeScript.CallExpression): void {\n      if (node.typeArguments != null && node.typeArguments.length > 0) {\n        propsType = first(node.typeArguments)\n      } else if (node.arguments != null && node.arguments.length > 0) {\n        propsOptions = first(node.arguments)\n      }\n    }\n\n    function processEmits(node: TypeScript.CallExpression): void {\n      if (node.typeArguments != null && node.typeArguments.length > 0) {\n        emitsType = first(node.typeArguments)\n      } else if (node.arguments != null && node.arguments.length > 0) {\n        emitsOptions = first(node.arguments)\n      }\n    }\n\n    function processExpose(node: TypeScript.CallExpression): void {\n      if (node.arguments != null && node.arguments.length > 0) {\n        exposeOptions = first(node.arguments)\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}