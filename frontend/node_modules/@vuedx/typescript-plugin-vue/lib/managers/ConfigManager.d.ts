import type { ProjectPreferences } from '@vuedx/projectconfig';
import { ReadonlyModel } from '@vuedx/shared';
export interface PluginConfig {
    /** Enable/disable .vue support */
    enabled: boolean;
    /** Enable/disable telemetry */
    telemetry: boolean;
    /** A file to communicate with extension? */
    extensionSocketId?: string;
    /** Include sourcemaps in debug mode */
    debugSourceMaps?: boolean;
    /** Prefrences  */
    preferences?: Partial<Pick<ProjectPreferences, 'script' | 'style' | 'template'>>;
}
export declare class ConfigManager {
    static instance: ConfigManager;
    private readonly _config;
    private constructor();
    get state(): ReadonlyModel<PluginConfig>;
    setConfig(config: PluginConfig): void;
}
//# sourceMappingURL=ConfigManager.d.ts.map