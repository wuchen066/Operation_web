import type { TSLanguageService, TypeScript } from '../contracts/TypeScript';
import { FilesystemService } from '../services/FilesystemService';
import { TypescriptContextService } from '../services/TypescriptContextService';
export declare class CodeFixService implements Pick<TSLanguageService, 'getCodeFixesAtPosition' | 'getCombinedCodeFix'> {
    private readonly ts;
    private readonly fs;
    constructor(ts: TypescriptContextService, fs: FilesystemService);
    getCodeFixesAtPosition(fileName: string, start: number, end: number, errorCodes: readonly number[], formatOptions: TypeScript.FormatCodeSettings, preferences: TypeScript.UserPreferences): readonly TypeScript.CodeFixAction[];
    getCombinedCodeFix(scope: TypeScript.CombinedCodeFixScope, fixId: {}, formatOptions: TypeScript.FormatCodeSettings, preferences: TypeScript.UserPreferences): TypeScript.CombinedCodeActions;
    private pick;
    processCodeFixActions(fixes: readonly TypeScript.CodeFixAction[]): TypeScript.CodeFixAction[];
}
//# sourceMappingURL=CodeFixService.d.ts.map