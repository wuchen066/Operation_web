import type { SignatureHelpItems } from 'typescript/lib/tsserverlibrary';
import type { TSLanguageService, TypeScript } from '../contracts/TypeScript';
import { FilesystemService } from '../services/FilesystemService';
import { TypescriptContextService } from '../services/TypescriptContextService';
export declare class SignatureHelpService implements Pick<TSLanguageService, 'getSignatureHelpItems' | 'prepareCallHierarchy' | 'provideCallHierarchyIncomingCalls' | 'provideCallHierarchyOutgoingCalls' | 'getBraceMatchingAtPosition' | 'isValidBraceCompletionAtPosition' | 'getNameOrDottedNameSpan'> {
    private readonly ts;
    private readonly fs;
    constructor(ts: TypescriptContextService, fs: FilesystemService);
    getSignatureHelpItems(fileName: string, position: number, options: TypeScript.SignatureHelpItemsOptions | undefined): SignatureHelpItems | undefined;
    prepareCallHierarchy(fileName: string, position: number): TypeScript.CallHierarchyItem | TypeScript.CallHierarchyItem[] | undefined;
    provideCallHierarchyIncomingCalls(fileName: string, position: number): TypeScript.CallHierarchyIncomingCall[];
    provideCallHierarchyOutgoingCalls(fileName: string, position: number): TypeScript.CallHierarchyOutgoingCall[];
    getBraceMatchingAtPosition(fileName: string, position: number): TypeScript.TextSpan[];
    isValidBraceCompletionAtPosition(fileName: string, position: number, openingBrace: number): boolean;
    getNameOrDottedNameSpan(fileName: string, startPos: number, endPos: number): TypeScript.TextSpan | undefined;
    private pick;
}
//# sourceMappingURL=SignatureHelpService.d.ts.map