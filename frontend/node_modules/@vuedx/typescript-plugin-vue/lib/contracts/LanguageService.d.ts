import type * as LS from 'vscode-languageserver-types';
import type { Disposable } from './Disposable';
export declare namespace LanguageService {
    type Position = LS.Position;
    type Range = LS.Range;
    type Definition = LS.Definition;
    type Diagnostic = LS.Diagnostic;
    type QuickInfo = LS.Hover;
    type MarkupContent = LS.MarkupContent;
    type CompletionList = LS.CompletionList;
    type CompletionItem = LS.CompletionItem;
    type CompletionItemKind = LS.CompletionItemKind;
}
export interface LanguageService extends Disposable {
    getDiagnostics(fileName: string): LanguageService.Diagnostic[];
    getDefinitionAt(fileName: string, position: LanguageService.Position): LanguageService.Definition[];
    getTypeDefinitionAt?(fileName: string, position: LanguageService.Position): LanguageService.Definition[];
    getQuickInfoAtPosition(fileName: string, position: LanguageService.Position): LanguageService.QuickInfo | null;
    getCompletionsAtPosition(fileName: string, position: LanguageService.Position): LanguageService.CompletionList;
}
//# sourceMappingURL=LanguageService.d.ts.map